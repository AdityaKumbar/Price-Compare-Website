{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api';\n\n// Fetch products from a specific scraper\nexport const fetchProducts = async (platform, query) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/scrapers/${platform}`, {\n      params: {\n        q: query\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching products from ${platform}:`, error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","fetchProducts","platform","query","response","get","params","q","data","error","console"],"sources":["C:/Users/ADITYA/Desktop/price compare/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\n\r\n// Fetch products from a specific scraper\r\nexport const fetchProducts = async (platform, query) => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/scrapers/${platform}`, {\r\n      params: { q: query },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error fetching products from ${platform}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;;AAEhD;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,KAAK,KAAK;EACtD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,GAAGL,YAAY,aAAaE,QAAQ,EAAE,EAAE;MACvEI,MAAM,EAAE;QAAEC,CAAC,EAAEJ;MAAM;IACrB,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgCP,QAAQ,GAAG,EAAEO,KAAK,CAAC;IACjE,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}