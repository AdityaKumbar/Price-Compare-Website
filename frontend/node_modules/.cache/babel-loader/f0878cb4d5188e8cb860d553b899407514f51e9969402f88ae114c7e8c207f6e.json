{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api';\n\n// Fetch products from a specific scraper\nexport const fetchProducts = async (platform, query) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/scrapers/${platform}`, {\n      params: {\n        q: query\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching products from ${platform}:`, error);\n    throw error;\n  }\n};\nexport const searchSwiggy = async location => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/swiggy?location=${encodeURIComponent(location)}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch Swiggy data');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error in searchSwiggy:', error);\n    return [];\n  }\n};\nexport const fetchZomatoRestaurants = async location => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/zomato?location=${encodeURIComponent(location)}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch Zomato restaurants');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error in fetchZomatoRestaurants:', error);\n    return [];\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","fetchProducts","platform","query","response","get","params","q","data","error","console","searchSwiggy","location","fetch","encodeURIComponent","ok","Error","json","fetchZomatoRestaurants"],"sources":["C:/Users/ADITYA/Desktop/price compare/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\n\r\n// Fetch products from a specific scraper\r\nexport const fetchProducts = async (platform, query) => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/scrapers/${platform}`, {\r\n      params: { q: query },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error fetching products from ${platform}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const searchSwiggy = async (location) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/swiggy?location=${encodeURIComponent(location)}`);\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch Swiggy data');\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error in searchSwiggy:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchZomatoRestaurants = async (location) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/zomato?location=${encodeURIComponent(location)}`);\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch Zomato restaurants');\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error in fetchZomatoRestaurants:', error);\r\n    return [];\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;;AAEhD;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,KAAK,KAAK;EACtD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,GAAGL,YAAY,aAAaE,QAAQ,EAAE,EAAE;MACvEI,MAAM,EAAE;QAAEC,CAAC,EAAEJ;MAAM;IACrB,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgCP,QAAQ,GAAG,EAAEO,KAAK,CAAC;IACjE,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMS,KAAK,CAAC,GAAGb,YAAY,oBAAoBc,kBAAkB,CAACF,QAAQ,CAAC,EAAE,CAAC;IAC/F,IAAI,CAACR,QAAQ,CAACW,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,OAAO,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOR,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,OAAO,EAAE;EACX;AACF,CAAC;AAED,OAAO,MAAMS,sBAAsB,GAAG,MAAON,QAAQ,IAAK;EACxD,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMS,KAAK,CAAC,GAAGb,YAAY,oBAAoBc,kBAAkB,CAACF,QAAQ,CAAC,EAAE,CAAC;IAC/F,IAAI,CAACR,QAAQ,CAACW,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;IACvD;IACA,OAAO,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOR,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,OAAO,EAAE;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}